{"version":3,"sources":["./src/course-list/course-list-routing.module.ts","./src/course-list/course-list.component.ts","./src/course-list/course-list.component.html","./src/course-list/course-list.module.ts"],"names":[],"mappings":"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","file":"course-list-course-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CourseListComponent } from './course-list.component';\r\n\r\nconst routes: Routes = [\r\n    //{ path: '', component: CourseListComponent }\r\n    { path: 'add', component: CourseListComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class CourseRoutingModule { }","import { Component, OnInit } from '@angular/core';\nimport { Customer, Product, Course } from \"../app/app.model\"\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})\nexport class CourseListComponent implements OnInit {\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n  ngOnInit(): void {\n    this.GetCoursesfromServer();\n  }\n\n  courseObj: Course = new Course(); //binded with UI\n  courseList: Array<Course> = new Array<Course>(); //collection\n  //errorM: string = '';\n  errorList: Array<string> = new Array<string>(); //collection\n\n  GetCoursesfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.courseUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  AddtoServer() {\n\n    var coursedto: any = _.omit(this.courseObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.courseUrl, coursedto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  SearchfromServer(courseName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.courseUrl + courseName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n\n    var coursedto: any = _.omit(this.courseObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.courseUrl + coursedto.id, coursedto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.courseUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: Course) {\n    this.courseObj = new Course();\n    this.courseObj.id = selected.id;\n    this.courseObj.courseName = selected.courseName;\n\n  }\n\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    this.courseList = res; //moved on top\n    this.courseObj = new Course();\n  }\n  ErrorObserver(res: any) {\n    for (let i = 0; i < res.error.length; i++) {\n      this.errorList.push(res.error[i].errorMessage)\n    }\n  }\n}\n","\n<div class=\"bg\">\n    <br>\n  <div class=\"center\">\n      <form [formGroup]=\"courseObj.formGroup\">\n        \n        <div class=\"wrapper\">\n          <label>Id :- </label>\n          <input type=\"text\" [(ngModel)]=\"courseObj.id\" [ngModelOptions]=\"{standalone: true}\">\n      \n          <label>Name :- </label>\n          <input formControlName=\"courseNameControl\" type=\"text\" [(ngModel)]=\"courseObj.courseName\" /> \n\n          \n        </div>\n        \n\n  <br>\n        <input [disabled]=\"!(courseObj.formGroup.valid)\" (click)=\"AddtoServer()\" type=\"button\" value=\"Add Server\" class=\"btn btn-success\"/>\n        <input type=\"button\" (click)=\"GetCoursesfromServer()\" value=\"GetList\" class=\"btn btn-primary\">\n        <input type=\"button\" (click)=\"SearchfromServer(courseObj.courseName)\" value=\"SearchList\" class=\"btn btn-info\">\n        <input type=\"button\" (click)=\"EditInServer()\" value=\"EditList\" class=\"btn btn-warning\">\n        <input type=\"button\" (click)=\"DeleteInServer(courseObj.id)\" value=\"DeleteRecord\" class=\"btn btn-danger\">\n\n      \n    </form>\n  </div>\n\n  <br>\n\n\n<table class=\"table table-striped\">\n    <tr *ngFor=\"let temp2 of errorList\">\n      <td>{{temp2}}</td>\n    </tr>\n  </table>\n  \n  \n  \n  <table class=\"table \"> \n    <thead class=\"thead-dark \">\n      <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Students</th>\n      <th>Edit</th>\n      <th>Delete</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let temp of courseList\" class=\"table-primary\">\n      <td>{{temp.id}}</td>\n      <td><img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Singapore.svg/510px-Flag_of_Singapore.svg.png'\" class=\"mr-2\" style=\"width: 20px\">\n        {{temp.courseName}}</td>\n        <td>{{temp.customers?.length || '0'}}</td>\n      <td><input type=\"button\" (click)=\"Select(temp)\" value=\"edit\" class=\"btn btn-warning\" ></td>\n      <td><input type=\"button\" (click)=\"DeleteInServer(temp.id)\" value=\"delete\" class=\"btn btn-danger\"></td>\n    </tr>\n    </tbody>\n  </table>\n\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CourseRoutingModule } from './course-list-routing.module';\r\nimport { CourseListComponent } from './course-list.component';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n// import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [CourseListComponent],\r\n    imports: [\r\n        CommonModule,\r\n        CourseRoutingModule,\r\n\r\n        FormsModule, //used for [(ngmodel)]\r\n        HttpClientModule, //used for injections http\r\n        ReactiveFormsModule, //used for formgroups validations\r\n        MatSelectModule,\r\n        NgbModule,\r\n    ]\r\n})\r\nexport class CourseListModule { }"],"sourceRoot":"webpack:///"}