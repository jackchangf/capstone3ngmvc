{"version":3,"sources":["./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/home/home.component.ts","./src/environments/environment.ts","./src/instructor-list/instructor-list.component.ts","./src/instructor-list/instructor-list.component.html","./src/app/app.model.ts","./src/header/header.component.ts","./src/header/header.html","./src/app/admin-panel/admin-panel.component.ts","./src/app/admin-panel/admin-panel.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/Common/Common.Global.ts","./src/Common/Common.AuthGuard.ts","./src/student-list/student-list.component.ts","./src/student-list/student-list.component.html","./src/app/forbidden/forbidden.component.ts","./src/app/forbidden/forbidden.component.html","./src/SecurityApp/SecurityApp.LoginModel.ts","./src/SecurityApp/SecurityApp.LoginComponent.ts","./src/SecurityApp/SecurityApp.Login.html","./src/app/app-routing.module.ts","./src/footer/footer.component.ts","./src/Common/Common.Interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(public routeObj: Router) { }\n\n  ngOnInit(): void {\n    //if user is login, redirect him to home page instead of login page again\n    if (localStorage.getItem('token') != null) {\n      this.routeObj.navigateByUrl('/home');\n    }\n  }\n\n}\n","\n<div class=\"center\">\n    <span><h2 class=\"btn btn-dark\" role=\"button\" routerLink = '/user/login' routerLinkActive='active'>Login</h2></span>\n    <span><h2 class=\"btn btn-dark\" role=\"button\" routerLink = '/user/registration' routerLinkActive='active'>Register</h2></span>\n</div>\n\n<router-outlet></router-outlet>\n\n\n\n\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Global } from 'src/Common/Common.Global';\nimport { User } from '../app.model';\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  userObj: User = new User();\n  errorList: Array<string> = new Array<string>(); //collection\n  succeeded: string = \"\";\n\n  constructor(public httpObj: HttpClient, public globalObj: Global) { }\n\n  ngOnInit(): void {\n  }\n\n\n  RegistertoServer() {\n    var userDto: any = _.omit(this.userObj, ['formGroup']);\n\n    var observable = this.httpObj\n      .post(this.globalObj.registerUrl, userDto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n  SuccessObserver(res: any) {\n    if (res.Succeeded) {\n      this.userObj.formGroup.reset();\n    }\n    // this.userObj = new User();\n  }\n  ErrorObserver(res: any) {\n    // for (let i = 0; i < res.errors.length; i++) {\n    //   this.errorList.push(res.errors[i])\n    //}\n  }\n\n}\n","\n<div class=\"center\">\n    <form [formGroup]=\"userObj.formGroup\">\n      <h1 class=\"center\">Register</h1>\n      <div class=\"wrapper\">\n\n        <!-- <label>Id :- </label>\n        <input type=\"text\" [(ngModel)]=\"userObj.id\" [ngModelOptions]=\"{standalone: true}\"> -->\n    \n        <label>First Name : </label>\n        <div>\n            <input formControlName=\"firstNameControl\" type=\"text\" [(ngModel)]=\"userObj.FirstName\" /> \n            <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['firstNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['firstNameControl'].hasError('required'))\"> First Name is required</p>\n            <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['firstNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['firstNameControl'].hasError('pattern'))\"> First Name should be of length 3 to 10</p>\n        </div>\n\n        <label>Last Name : </label>\n        <div>\n        <input formControlName=\"lastNameControl\" type=\"text\" [(ngModel)]=\"userObj.LastName\" /> \n        <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['lastNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['lastNameControl'].hasError('required'))\"> Last Name is required</p>\n        <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['lastNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['lastNameControl'].hasError('pattern'))\"> Last Name should be of length 3 to 10</p>\n        </div>\n\n        <label>User Name : </label>\n        <div>\n        <input formControlName=\"userNameControl\" type=\"text\" [(ngModel)]=\"userObj.UserName\" /> \n        <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['userNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['userNameControl'].hasError('required'))\"> User Name is required</p>\n        <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['userNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['userNameControl'].hasError('pattern'))\"> User Name should be of length 3 to 10</p>\n        </div>\n\n        <label>Password : </label>\n        <div>\n        <input formControlName=\"passwordControl\" type=\"text\" [(ngModel)]=\"userObj.Password\" />\n        <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['passwordControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['passwordControl'].hasError('required'))\"> Password is required</p>\n        </div>\n\n        <label>Email : </label>\n        <div>\n        <input formControlName=\"emailControl\" type=\"text\" [(ngModel)]=\"userObj.Email\" />\n        <p class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['emailControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['emailControl'].hasError('required'))\"> Email is required</p>\n        </div>  \n        \n      </div>\n      \n\n<br>\n      \n      <!--[ngModelOptions]=\"{standalone: true}\" this is for standalone with no validation  -->\n      <!--\n      <div>\n      id :- <input type=\"text\" [(ngModel)]=\"userObj.id\" [ngModelOptions]=\"{standalone: true}\"><br /> \n      </div>\n      <br>\n    \n      <div>\n      Name :- <input formControlName=\"userNameControl\" type=\"text\" [(ngModel)]=\"userObj.customerName\" />    \n      <span class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['userNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['userNameControl'].hasError('required'))\"> Name is required</span>\n      <span class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['userNameControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['userNameControl'].hasError('pattern'))\"> Name should be of length 3 to 10</span>\n      </div>\n      <br>\n    \n      <div>\n      Address :- <input formControlName=\"addressControl\" type=\"text\"  [(ngModel)]=\"userObj.address\" /> \n      <span class=\"errorMessage\" *ngIf=\"userObj.formGroup.controls['addressControl'].dirty\" [hidden]=\"!(userObj.formGroup.controls['addressControl'].hasError('required'))\"> Address is required</span>\n      </div>\n      <br>\n\n      <div>\n      product name: <input type=\"text\" [(ngModel)]=\"productObj.name\">\n      <input type=\"button\" value=\"Add products\" (click)=\"AddProduct()\">      \n      </div>\n      <br>\n      -->\n<br>\n      <input [disabled]=\"!(userObj.formGroup.valid)\" (click)=\"RegistertoServer()\" type=\"button\" value=\"Register\" class=\"btn btn-success\"/>\n      <!--client side validations-->\n    \n  </form>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  template: `\n  <div class=\"bg\">\n    <div class=\"container text-center\">\n      <div class=\"row\">\n          <div class=\"col-md-7 col-sm-12\">\n              <h6>Contonso University</h6>\n              <h1>Welcome</h1>\n              <p>Student Management System</p>\n          </div>\n          <div class=\"col-md-5 col-sm-12\">\n              <img src=\"CustomerClientApp/assets/cp1.jpg\" alt=\"cp1\">\n          </div>\n      </div>    \n    </div>\n  </div>\n\n  <div class=\"center\">\n  <figure>\n    <img src=\"CustomerClientApp/assets/cp3.jpg\" alt=\"cp3\">\n    <br />\n    <figcaption>Sea otters hold hands when they\n    sleep so they don't drift away from each\n    other.</figcaption>\n  </figure>\n  </div>\n\n  <!-- Carousel -->\n        <div class=\"container mt-4\">\n            <div id=\"carouselExampleCaptions\" class=\"carousel slide shadow\" data-ride=\"carousel\">\n                <ol class=\"carousel-indicators\">\n                    <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"0\" class=\"\"></li>\n                    <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"1\" class=\"active\"></li>\n                    <li data-target=\"#carouselExampleCaptions\" data-slide-to=\"2\" class=\"\"></li>\n                </ol>\n                <div class=\"carousel-inner\">\n                    <div class=\"carousel-item\">\n                        <img src=\"CustomerClientApp/assets/cp3.jpg\" class=\"d-block w-100\" alt=\"cp3\">\n                        <div class=\"carousel-caption d-none d-md-block\">\n                            <h4>Welcome to Contoso University!</h4>\n                            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n                        </div>\n                    </div>\n                    <div class=\"carousel-item\">\n                        <img src=\"CustomerClientApp/assets/cp5.jpg\" class=\"d-block w-100\" alt=\"cp5\">\n                        <div class=\"carousel-caption d-none d-md-block\">\n                            <h4>Staying safe and well in the Campus</h4>\n                            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n                        </div>\n                    </div>\n                    <div class=\"carousel-item active\">\n                        <img src=\"CustomerClientApp/assets/cp7.jpg\" class=\"d-block w-100\" alt=\"cp7\">\n                        <div class=\"carousel-caption d-none d-md-block\">\n                            <h4>Mesage from the University Administration</h4>\n                            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n                        </div>\n                    </div>\n                </div>\n                <a class=\"carousel-control-prev\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"prev\">\n                    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"sr-only\">Previous</span>\n                </a>\n                <a class=\"carousel-control-next\" href=\"#carouselExampleCaptions\" role=\"button\" data-slide=\"next\">\n                    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                    <span class=\"sr-only\">Next</span>\n                </a>\n            </div>\n        </div>\n\n  `,\n  styles: [`\n  /*img*/\n  img {\n    border: 3px solid whitesmoke;\n    width: 120%;\n    margin-left: -10em;\n    margin-top: 3em;\n}\n\n  .row .col-md-7 {\n    padding: 22vmin 1vmin;\n    padding-bottom: 15vmin;\n    font-family: var(--Rubik);\n    color: white;\n    \n}\n\n.container .col-md-7 h6 {\n    padding: 1vmin;\n    letter-spacing: 4px;\n    background-color:black;\n    clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 70%, 70% 100%, 30% 100%, 0 100%, 0% 30%);\n}\n\n.container .col-md-7 h1 {\n    font-size: 5vmin;\n    font-weight: bold;\n    padding: 2vmin 2vmin;\n    background-color:black;\n    clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 70%, 70% 100%, 30% 100%, 0 100%, 0% 30%);\n}\n\n.container .col-md-7 p {\n    padding: 1vmin 5vmin;\n    background-color:black;\n    clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 70%, 70% 100%, 30% 100%, 0 100%, 0% 30%);\n}\n.bg {\n  background: url('CustomerClientApp/assets/cp9.jpg') no-repeat center / cover;\n\n}\n\nfigure{\n  width:50%;\n  justify-self:center;\n}\n  `\n  ]\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instructor-list',\n  templateUrl: './instructor-list.component.html',\n  styleUrls: ['./instructor-list.component.css']\n})\nexport class InstructorListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bg\">\n    <div id=\"content\"> <!--grid wrapper-->\n\n        <!-- <div class=\"one\">1</div>\n        <div class=\"two\">2</div>\n        <div class=\"three\">3</div>\n        <div class=\"four nested\">\n            <p>1</p>\n            <p>2</p>\n            <p>3</p>\n            <p>4</p>\n        </div>\n        <div class=\"five\">5</div>\n        <div class=\"six\">6</div> -->\n\n        <main>\n            <h2>Computing</h2>\n            <h2>Philosophy</h2>\n            <h2>Skydiving</h2>\n            <h2>Training</h2>\n        </main>\n        <section>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar1.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar2.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar3.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar4.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n        </section>\n\n    </div>\n</div>\n","import {\r\n    NgForm,\r\n    FormGroup,//step1 import these for validations, client side validations\r\n    FormControl,\r\n    Validators,\r\n    FormBuilder\r\n} from '@angular/forms'\r\n\r\n\r\nexport class Customer {\r\n    id: number = 0;\r\n    customerName: string = \"\";\r\n    address: string = \"\";\r\n\r\n    //1 to many relationship\r\n    products: Array<Product> = new Array<Product>();\r\n\r\n    //many to many relationship\r\n    courses: Array<Course> = new Array<Course>();\r\n\r\n    //step 2 create hte instnace for formgroup\r\n    formGroup: FormGroup;\r\n\r\n    constructor() {\r\n        //step 3 use builder to create empty hierachy\r\n        var _builder = new FormBuilder();\r\n        this.formGroup = _builder.group({});\r\n\r\n        //step 4 add required validation on customer name\r\n        this.formGroup.addControl(\"addressControl\", new FormControl('', Validators.required));\r\n\r\n        var validationcollection = [];\r\n        validationcollection.push(Validators.required);\r\n        validationcollection.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n\r\n        this.formGroup.addControl(\"customerNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n\r\n    }\r\n}\r\n\r\nexport class Product {\r\n    id: number = 0;\r\n    name: string = \"\";\r\n\r\n}\r\n\r\nexport class Course {\r\n    id: number = 0;\r\n    courseName: string = \"\";\r\n\r\n    //many to many relationship\r\n    customers: Array<Customer> = new Array<Customer>();\r\n\r\n    formGroup: FormGroup;\r\n\r\n    constructor() {\r\n        //step 3 use builder to create empty hierachy\r\n        var _builder = new FormBuilder();\r\n        this.formGroup = _builder.group({});\r\n\r\n        //step 4 add required validation on customer name\r\n        // this.formGroup.addControl(\"addressControl\", new FormControl('', Validators.required));\r\n\r\n        var validationcollection = [];\r\n        validationcollection.push(Validators.required);\r\n        validationcollection.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n\r\n        this.formGroup.addControl(\"courseNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n\r\n    }\r\n}\r\n\r\nexport class User {\r\n    //id: number = 0;\r\n    FirstName: string = \"\";\r\n    LastName: string = \"\";\r\n    UserName: string = \"\";\r\n    Email: string = \"\";\r\n    Password: string = \"\";\r\n\r\n    //many to many relationship\r\n    //customers: Array<Customer> = new Array<Customer>();\r\n\r\n    formGroup: FormGroup;\r\n\r\n    constructor() {\r\n        //step 3 use builder to create empty hierachy\r\n        var _builder = new FormBuilder();\r\n        this.formGroup = _builder.group({});\r\n\r\n        //step 4 add required validation on customer name\r\n        // this.formGroup.addControl(\"addressControl\", new FormControl('', Validators.required));\r\n\r\n        var validationcollection = [];\r\n        validationcollection.push(Validators.required);\r\n        validationcollection.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n\r\n        this.formGroup.addControl(\"firstNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n        this.formGroup.addControl(\"lastNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n        this.formGroup.addControl(\"userNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n        this.formGroup.addControl(\"emailControl\", new FormControl('', [Validators.email, Validators.required]));\r\n        this.formGroup.addControl(\"passwordControl\", new FormControl('', [Validators.required]));\r\n\r\n    }\r\n}\r\n\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from 'src/app/app.model';\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.html',\n  styleUrls: ['./header.style.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  // Define a variable to use for showing/hiding the Login button\n  isUserLoggedIn: boolean = false;\n  user: User = new User();\n\n  constructor(public routerObj: Router, public global: Global, public http: HttpClient) {\n    // Subscribe here, this will automatically update \n    // \"isUserLoggedIn\" whenever a change to the subject is made.\n    this.global.isUserLoggedIn.subscribe(value => {\n      this.isUserLoggedIn = value;\n    });\n\n    this.global.userActive.subscribe(value => {\n      this.user = value;\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.global.CheckToken()) {\n      var userActive: any = localStorage.getItem('userActive');\n      this.user = JSON.parse(userActive);\n    }\n    else {\n\n    }\n  }\n\n  navbarCollapsed = true;\n\n  toggleNavbarCollapsing() {\n    this.navbarCollapsed = !this.navbarCollapsed;\n  }\n\n  LogOut() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('userActive');\n    this.global.isUserLoggedIn.next(false);\n    this.global.userActive.next({} as any);\n    this.routerObj.navigateByUrl('user/login');\n  }\n\n\n}\n","<header>\r\n    <div class=\"container-fluid p-0\">\r\n        <div id=\"nav-placeholder\">\r\n          <nav class=\"navbar navbar-expand-lg\">\r\n            <div class=\"container-fluid\">\r\n              <a class=\"navbar-brand\" href=\"#\">\r\n                  <i class=\"fas fa-book-reader fa-3x mx-3\"></i>\r\n                  Contonso University</a>\r\n              <button class=\"navbar-toggler\" type=\"button\" (click)=\"toggleNavbarCollapsing()\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <i class=\"fas fa-align-right text-light\"></i>\r\n              </button>\r\n              <div class=\"collapse navbar-collapse\" id=\"navbarNav\" [class.collapse]=\"navbarCollapsed\">\r\n                <div class=\"mr-auto\"></div>\r\n                    <ul class=\"navbar-nav\">\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" id=\"adminPage\" aria-current=\"page\" routerLink=\"/adminpanel\" routerLinkActive=\"active\" >Admin</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" id=\"homePage\" aria-current=\"page\" routerLink=\"/home\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" id=\"studentsPage\" routerLink=\"/students\" routerLinkActive=\"active\">Students</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" id=\"coursesPage\" routerLink=\"/courses/add\" routerLinkActive=\"active\">Courses</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" routerLink=\"/instructors\" routerLinkActive=\"active\">Instructors</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" routerLink=\"/user\" routerLinkActive=\"active\" [hidden]=\"global.CheckToken()\">Login/Register</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <button class=\"btn btn-warning\" (click)=\"LogOut()\" [hidden]=\"!global.CheckToken()\">LogOut</button>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" >{{isUserLoggedIn}}</a>\r\n                        </li>\r\n                        <li class=\"nav-item\">\r\n                            <a class=\"nav-link\" >{{user.UserName}}    {{user.Email}}</a>\r\n                        </li>\r\n                        <!-- <li class=\"nav-item dropdown\">\r\n                            <div class=\"dropdown\">\r\n                                <a class=\"nav-link\" href=\"#\">Departments</a>\r\n                                <div class=\"dropdown-content\">\r\n                                    <a href=\"#\">Generic</a>\r\n                                    <a href=\"#\">Element</a>\r\n                                </div>\r\n                            </div>\r\n                        </li> -->\r\n                    </ul> \r\n              </div>\r\n            </div>\r\n          </nav>\r\n          \r\n        </div>\r\n    </div>\r\n  \r\n    <!--<div class=\"container text-center\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-7 col-sm-12\">\r\n                <h6>Contonso University</h6>\r\n                <h1>Welcome</h1>\r\n                <p>Student Management System</p>\r\n            </div>\r\n            <div class=\"col-md-5 col-sm-12\">\r\n                <img src=\"../assets/cp1.jpg\" alt=\"cp1\">\r\n            </div>\r\n        </div>    \r\n    </div> -->\r\n    \r\n  </header>\r\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin-panel works!</p>\n","import { Component } from '@angular/core';\nimport { Customer, Product } from \"./app.model\"\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.style.css']\n})\nexport class AppComponent {\n  date: Date = new Date();\n  /*\n  ngOnInit() {\n    //  this event is ready made and occurs first time when component is loaded\n    this.GetfromServer();\n  }\n\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n  title = 'CustomerClientApp';\n  productObj: Product = new Product(); //bind with ui\n  customerObj: Customer = new Customer(); //binded with UI\n  customerList: Array<Customer> = new Array<Customer>(); //collection\n  //errorM: string = '';\n  errorList: Array<string> = new Array<string>(); //collection\n  jsontest: any;\n\n  date: Date = new Date();\n\n  //take current product and add to customerobj products collection\n  AddProduct() {\n    this.customerObj.products.push(this.productObj);\n    this.productObj = new Product();\n  }\n\n  //add in memory\n  Add() {\n    this.customerList.push(this.customerObj); //adds the current customer obj\n    this.customerObj = new Customer(); //reset the customer obj\n    //alert(\"add is called\");\n  }\n  AddtoServer() {\n    //=====to solve circular json error======\n    //need to use dto data transfer object, basically we passing formgroup in addition to the id,name,address to mvc and mvc doesn't know what is formgroup. so we create a new dto object that copies the id,name and address only,then in the observable post, we pass this custdto instead of this.customerObj\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n    // custdto.products = this.customerObj.products; //pass the products list from customerobj to custdto to send to server\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    // var custdto:any = {\n    //   Id : this.customerObj.Id,\n    //   customerName : this.customerObj.customerName,\n    //   address : this.customerObj.address\n    // };\n\n    //we need to make call to mvc domain https://localhost:44301/\n    // var observable = this.httpObj\n    //   .post(\"https://localhost:44301/Customer/Add\", custdto); //custdto instead of this.customerObj to not include formgroup to mvc as mvc doesn't know what is formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.customerUrl, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    // for (let element of res) {\n    //   var cust: Customer = new Customer();\n    //   cust.id = element.id;\n    //   cust.address = element.address;\n    //   cust.customerName = element.customerName;\n    //   cust.products = element.products\n    //   this.customerList.push(cust);\n    // };\n\n\n    this.customerList = res; //moved on top\n    this.customerObj = new Customer();\n  }\n  ErrorObserver(res: any) {\n    for (let i = 0; i < res.error.length; i++) {\n      this.errorList.push(res.error[i].errorMessage)\n    }\n    //this.errorM = JSON.stringify(res.message);\n    // this.errorList.push(res.error[0].errorMessage);\n    // this.errorList.push(res.error[1].errorMessage);\n  }\n\n\n\n  jsonObserver(res: any) {\n    this.jsontest = res;\n  }\n\n  GetfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  getjsontest() {\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.jsonObserver(res)\n    )\n  }\n\n  SearchfromServer(customerName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl + customerName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.customerUrl + custdto.id, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.customerUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: Customer) {\n    this.customerObj = new Customer();\n    this.customerObj.id = selected.id;\n    this.customerObj.customerName = selected.customerName;\n    this.customerObj.address = selected.address;\n    this.customerObj.products = selected.products;\n  }\n*/\n}\n","<!--<p>this is an app</p>\n<form action=\"/Customer/Add\" method=\"post\">\n  Name :-<input type=\"text\" [(ngModel)]=\"customerObj.customerName\" [ngModelOptions]=\"{standalone: true}\"  /><br /> \n  Address :-<input type=\"text\" [(ngModel)]=\"customerObj.address\" [ngModelOptions]=\"{standalone: true}\" /><br /> \n  <input type=\"submit\" value=\"Add\" />\n</form>\n\n<br>\n\n<p>name</p>{{customerObj.customerName}} <br>\n<p>address</p>{{customerObj.address}}\n-->\n\n <!-- header -->\n <app-header></app-header>\n\n<body>\n\n<span class=\"center\">{{date | date:'long'}}</span>\n\n</body>\n\n <!-- routes will be rendered here -->\n <router-outlet></router-outlet>\n  \n\n<br>\n <!-- footer -->\n <app-footer></app-footer>\n\n\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\n\nimport { Global } from 'src/Common/Common.Global';\nimport { JwtInterceptor } from 'src/Common/Common.Interceptor';\nimport { MyAuthGuard } from 'src/Common/Common.AuthGuard';\nimport { UserComponent } from './user/user.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\n// import { RouterModule, RoutesRecognized } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    HeaderComponent,\n    FooterComponent,\n    UserComponent,\n    AdminPanelComponent,\n    ForbiddenComponent,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, //used for [(ngmodel)]\n    HttpClientModule, //used for injections http\n    ReactiveFormsModule, //used for formgroups validations\n    NgbModule,\n    AppRoutingModule,//used for routing\n    BrowserAnimationsModule, //used by angular mat\n    // RouterModule.forRoot(CustomerRoutes) //to apply to all\n    //RouterModule.forChild(routes),\n    MatSelectModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatNativeDateModule\n  ],\n  providers: [Global, MyAuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor, multi: true\n    }],\n  bootstrap: [AppComponent] //changing this will determine what gets loaded up first like templateComponent\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { User } from \"src/app/app.model\";\r\n\r\n\r\n// global var injected in modules providers as service\r\n@Injectable()\r\nexport class Global {\r\n    customerUrl: string = \"https://localhost:44301/api/CustomerAPI/\";\r\n    securityUrl: string = \"https://localhost:44301/api/Account/Login\";\r\n    courseUrl: string = \"https://localhost:44301/api/CourseAPI/\";\r\n    registerUrl: string = \"https://localhost:44301/api/Account/Register\";\r\n    userProfileUrl: string = \"https://localhost:44301/api/userprofile\"\r\n    // customerUrl: string = \"https://jackchangf.azurewebsites.net/api/CustomerAPI/\";\r\n    // securityUrl: string = \"https://jackchangf.azurewebsites.net/api/Security\";\r\n    // courseUrl: string = \"https://jackchangf.azurewebsites.net/api/CourseAPI\";\r\n    //token: string = \"\"; //used localStorage instead\r\n    public isUserLoggedIn: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n    public userActive: BehaviorSubject<User> = new BehaviorSubject<User>({} as any);\r\n\r\n\r\n    CheckToken() {\r\n        if ((localStorage.getItem('token') != null)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    roleMatch(allowedRoles: any[]): boolean {\r\n        var isMatch = false;\r\n        var payLoad = JSON.parse(window.atob(localStorage.getItem('token')!.split('.')[1]));\r\n        var userRole = payLoad.role;\r\n        allowedRoles.forEach((element: any) => {\r\n            if (userRole == element) {\r\n                isMatch = true;\r\n                //return false;\r\n            }\r\n        });\r\n        return isMatch;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from './Common.Global';\r\n\r\n\r\n@Injectable()\r\nexport class MyAuthGuard implements CanActivate {\r\n\r\n\r\n    constructor(private _router: Router,\r\n        public _global: Global) {\r\n    }\r\n\r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        // if (this._global.token.length != 0) {\r\n        //     return true;\r\n        // }\r\n\r\n        if (localStorage.getItem('token') != null) {\r\n            //role admin or member\r\n            let roles = next.data['permittedRoles'] as Array<string>;\r\n            if (roles) {\r\n                if (this._global.roleMatch(roles)) return true;\r\n                else {\r\n                    this._router.navigate(['forbidden']);\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        else {\r\n            // navigate to login page\r\n            this._router.navigate(['/user/Login']);\r\n            // you can save redirect url so after authing we can move them back to the page they requested\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Customer, Product, Course } from \"../app/app.model\"\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  ngOnInit() {\n    //  this event is ready made and occurs first time when component is loaded\n    this.GetfromServer();\n    this.GetCoursesfromServer();\n  }\n\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n  title = 'CustomerClientApp';\n  productObj: Product = new Product(); //bind with ui\n  customerObj: Customer = new Customer(); //binded with UI\n  customerList: Array<Customer> = new Array<Customer>(); //collection\n  courseList: Array<Course> = new Array<Course>(); //collection\n  courseObj: Course = new Course(); //binded with UI\n  //errorM: string = '';\n  errorList: Array<string> = new Array<string>(); //collection\n  jsontest: any;\n  selectedCourseId: number = 0;\n\n  date: Date = new Date();\n\n\n\n  //take current product and add to customerobj products collection\n  AddProduct() {\n    this.customerObj.products.push(this.productObj);\n    this.productObj = new Product();\n  }\n\n  AddCourse() {\n\n    for (let i = 0; i < this.courseList.length; i++) {\n      if (this.courseList[i].id == this.selectedCourseId) {\n        this.customerObj.courses.push(this.courseList[i]);\n      }\n    }\n\n  }\n\n  //add in memory\n  Add() {\n    this.customerList.push(this.customerObj); //adds the current customer obj\n    this.customerObj = new Customer(); //reset the customer obj\n    //alert(\"add is called\");\n  }\n  AddtoServer() {\n    //=====to solve circular json error======\n    //need to use dto data transfer object, basically we passing formgroup in addition to the id,name,address to mvc and mvc doesn't know what is formgroup. so we create a new dto object that copies the id,name and address only,then in the observable post, we pass this custdto instead of this.customerObj\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n    // custdto.products = this.customerObj.products; //pass the products list from customerobj to custdto to send to server\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    // var custdto:any = {\n    //   Id : this.customerObj.Id,\n    //   customerName : this.customerObj.customerName,\n    //   address : this.customerObj.address\n    // };\n\n    //we need to make call to mvc domain https://localhost:44301/\n    // var observable = this.httpObj\n    //   .post(\"https://localhost:44301/Customer/Add\", custdto); //custdto instead of this.customerObj to not include formgroup to mvc as mvc doesn't know what is formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.customerUrl, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    // for (let element of res) {\n    //   var cust: Customer = new Customer();\n    //   cust.id = element.id;\n    //   cust.address = element.address;\n    //   cust.customerName = element.customerName;\n    //   cust.products = element.products\n    //   this.customerList.push(cust);\n    // };\n\n\n    this.customerList = res; //moved on top\n    this.customerObj = new Customer();\n  }\n  SuccessObserver1(res: any) { //res is just a variable, data type any\n    this.courseList = res; //moved on top\n    this.courseObj = new Course();\n  }\n  ErrorObserver(res: any) {\n    for (let i = 0; i < res.error.length; i++) {\n      this.errorList.push(res.error[i].errorMessage)\n    }\n    //this.errorM = JSON.stringify(res.message);\n    // this.errorList.push(res.error[0].errorMessage);\n    // this.errorList.push(res.error[1].errorMessage);\n  }\n\n\n\n  jsonObserver(res: any) {\n    this.jsontest = res;\n  }\n\n  GetfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  GetCoursesfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.courseUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver1(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n\n  getjsontest() {\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.jsonObserver(res)\n    )\n  }\n\n  SearchfromServer(customerName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl + customerName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.customerUrl + custdto.id, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.customerUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: Customer) {\n    this.customerObj = new Customer();\n    this.customerObj.id = selected.id;\n    this.customerObj.customerName = selected.customerName;\n    this.customerObj.address = selected.address;\n    this.customerObj.products = selected.products;\n    this.customerObj.courses = selected.courses;\n  }\n\n}\n","\n<div class=\"bg\">\n  <br>\n<div class=\"center\">\n    <form [formGroup]=\"customerObj.formGroup\">\n      \n      <div class=\"wrapper\">\n        <label>Id :- </label>\n        <input type=\"text\" [(ngModel)]=\"customerObj.id\" [ngModelOptions]=\"{standalone: true}\">\n    \n        <label>Name :- </label>\n        <input formControlName=\"customerNameControl\" type=\"text\" [(ngModel)]=\"customerObj.customerName\" /> \n    \n        <label>Courses :- </label>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Courses</mat-label>\n          <mat-select [(value)]=\"selectedCourseId\">\n              <mat-option *ngFor=\"let temp of courseList\" [value]=\"temp.id\">\n                {{temp.courseName}}\n              </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <label>AddCourses: </label>\n        <input type=\"button\" value=\"Add course\" (click)=\"AddCourse()\" class=\"btn btn-success\">\n\n        <label>CourseAdded: </label>\n        <ul>\n          <li *ngFor=\"let temp of customerObj.courses\">\n            <table>\n              <tr>\n                <td>{{temp.id}}</td>\n                <td>{{temp.courseName}}</td>\n              </tr>\n            </table>\n          </li>\n        </ul>\n\n        <label>Address :- </label>\n        <input formControlName=\"addressControl\" type=\"text\"  [(ngModel)]=\"customerObj.address\" /> \n\n        <label>Product :- </label>\n        <input type=\"text\" [(ngModel)]=\"productObj.name\" [ngModelOptions]=\"{standalone: true}\">\n        \n        <input type=\"button\" value=\"Add products\" (click)=\"AddProduct()\" class=\"btn btn-success\">\n        \n      </div>\n      \n\n      <ul>\n        <li *ngFor=\"let temp of customerObj.products\">\n          <td>{{temp.name}}</td>\n        </li>\n      </ul>\n<br>\n      \n      <!--[ngModelOptions]=\"{standalone: true}\" this is for standalone with no validation  -->\n      <!--\n      <div>\n      id :- <input type=\"text\" [(ngModel)]=\"customerObj.id\" [ngModelOptions]=\"{standalone: true}\"><br /> \n      </div>\n      <br>\n    \n      <div>\n      Name :- <input formControlName=\"customerNameControl\" type=\"text\" [(ngModel)]=\"customerObj.customerName\" />    \n      <span class=\"errorMessage\" *ngIf=\"customerObj.formGroup.controls['customerNameControl'].dirty\" [hidden]=\"!(customerObj.formGroup.controls['customerNameControl'].hasError('required'))\"> Name is required</span>\n      <span class=\"errorMessage\" *ngIf=\"customerObj.formGroup.controls['customerNameControl'].dirty\" [hidden]=\"!(customerObj.formGroup.controls['customerNameControl'].hasError('pattern'))\"> Name should be of length 3 to 10</span>\n      </div>\n      <br>\n    \n      <div>\n      Address :- <input formControlName=\"addressControl\" type=\"text\"  [(ngModel)]=\"customerObj.address\" /> \n      <span class=\"errorMessage\" *ngIf=\"customerObj.formGroup.controls['addressControl'].dirty\" [hidden]=\"!(customerObj.formGroup.controls['addressControl'].hasError('required'))\"> Address is required</span>\n      </div>\n      <br>\n\n      <div>\n      product name: <input type=\"text\" [(ngModel)]=\"productObj.name\">\n      <input type=\"button\" value=\"Add products\" (click)=\"AddProduct()\">      \n      </div>\n      <br>\n      -->\n<br>\n      <input (click)=\"Add()\" type=\"button\" value=\"Add\" class=\"btn btn-secondary\"/>\n      <input [disabled]=\"!(customerObj.formGroup.valid)\" (click)=\"AddtoServer()\" type=\"button\" value=\"Add Server\" class=\"btn btn-success\"/>\n      <input type=\"button\" (click)=\"GetfromServer()\" value=\"GetList\" class=\"btn btn-primary\">\n      <input type=\"button\" (click)=\"SearchfromServer(customerObj.customerName)\" value=\"SearchList\" class=\"btn btn-info\">\n      <input type=\"button\" (click)=\"EditInServer()\" value=\"EditList\" class=\"btn btn-warning\">\n      <input type=\"button\" (click)=\"DeleteInServer(customerObj.id)\" value=\"DeleteRecord\" class=\"btn btn-danger\">\n      <input type=\"button\" (click)=\"getjsontest()\" value=\"GetJson\" class=\"btn btn-dark\">\n      <!--client side validations-->\n    \n  </form>\n</div>\n\n<p>You selected: {{selectedCourseId}}</p>\n\n        <!-- <ul>\n          <li *ngFor=\"let temp of courseList\">\n            <td>{{temp.courseName}}</td>\n          </li>\n        </ul> -->\n\n    <br />\n    {{customerObj.customerName}}<br>\n    {{customerObj.address}}\n   \n    <!-- {{errorM}} -->\n    \n    <table class=\"table table-striped\">\n      <tr *ngFor=\"let temp2 of errorList\">\n        <td>{{temp2}}</td>\n      </tr>\n    </table>\n    \n    \n    \n    <table class=\"table \"> \n      <thead class=\"thead-dark \">\n        <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Address</th>\n        <th>Products</th>\n        <th>Courses</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let temp of customerList\" class=\"table-primary\">\n        <td>{{temp.id}}</td>\n        <td><img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Singapore.svg/510px-Flag_of_Singapore.svg.png'\" class=\"mr-2\" style=\"width: 20px\">\n          {{temp.customerName}}</td>\n        <td>{{temp.address}}</td>\n        <td>\n          <table>\n            <tr *ngFor=\"let temp2 of temp.products\">\n              <td>{{temp2.name}}</td>\n            </tr>\n          </table>\n        </td>\n        <td>\n          <table>\n            <tr *ngFor=\"let temp3 of temp.courses\">\n              <td>{{temp3.courseName}}</td>\n            </tr>\n          </table>\n        </td>\n        <td><input type=\"button\" (click)=\"Select(temp)\" value=\"edit\" class=\"btn btn-warning\" ></td>\n        <td><input type=\"button\" (click)=\"DeleteInServer(temp.id)\" value=\"delete\" class=\"btn btn-danger\"></td>\n      </tr>\n    </tbody>\n    </table>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-forbidden',\n  templateUrl: './forbidden.component.html',\n  styleUrls: ['./forbidden.component.css']\n})\nexport class ForbiddenComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col s6 offset-s3\">\n      <div class=\"card\">\n        <div class=\"card-image\">\n          <!-- <img src=\"/assets/img/403.png\" style=\"height:300px;width:300px;\"> -->\n  \n        </div>\n        <div class=\"card-content\">\n          <span class=\"card-title\" style=\"color:#039be5\">403 - ACCESS DENIED</span>\n          <p>You don't have the permission to access this resource.</p>\n        </div>\n      </div>\n    </div>\n  </div>","\r\nexport class User {\r\n    userName: string = \"\";\r\n    password: string = \"\";\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Global } from \"src/Common/Common.Global\";\r\nimport { User } from \"./SecurityApp.LoginModel\";\r\n\r\n\r\n@Component({\r\n    selector: 'security-login',\r\n    templateUrl: './SecurityApp.Login.html',\r\n    styleUrls: ['./SecurityApp.LoginStyle.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    userObj: User = new User();\r\n\r\n    constructor(public httpObj: HttpClient,\r\n        public globalObj: Global,\r\n        public routeObj: Router) {\r\n\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n    }\r\n\r\n\r\n    Login() {\r\n        // we will make a call to mvc to get token\r\n        // alert(this.userObj.userName + \" \" + this.userObj.password);\r\n\r\n        var observable = this.httpObj.post(this.globalObj.securityUrl, this.userObj);\r\n        //var observable = this.httpObj.post(\"https://jackchangf.azurewebsites.net/api/Security\", this.userObj);\r\n\r\n        observable.subscribe(\r\n            res => this.success(res),\r\n            res => this.error(res)\r\n        );\r\n    }\r\n\r\n    success(res: any) {\r\n        //this.globalObj.token = res.token;\r\n        localStorage.setItem('token', res.token);\r\n        this.GetUserProfile();\r\n        this.globalObj.isUserLoggedIn.next(true);\r\n        //nav to student screen after login token\r\n        this.routeObj.navigateByUrl('students');\r\n    }\r\n    error(res: any) {\r\n        console.log(res);\r\n    }\r\n\r\n    GetUserProfile() {\r\n        var observable = this.httpObj.get(this.globalObj.userProfileUrl);\r\n\r\n        observable.subscribe(\r\n            res => this.SuccessObserver(res),\r\n            res => this.error(res)\r\n        )\r\n    }\r\n\r\n    SuccessObserver(res: any) {\r\n        // Put the object into storage\r\n        localStorage.setItem('userActive', JSON.stringify(res));\r\n\r\n        // Retrieve the object from storage\r\n        //var retrievedObject: any = localStorage.getItem('userActive');\r\n\r\n        this.globalObj.userActive.next(res);\r\n    }\r\n}","<div class=\"center\">\r\n    <form action=\"\">\r\n        <h1 class=\"center\">Login</h1>\r\n        <div class=\"wrapper\">\r\n            <label>Username: </label>\r\n            <input type=\"text\" [(ngModel)]=\"userObj.userName\" name=\"userName\">\r\n\r\n            <label>Password: </label>\r\n            <input type=\"password\" [(ngModel)]=\"userObj.password\" name=\"password\"/> \r\n\r\n            <input type=\"button\" value=\"Login\" class=\"btn btn-success\" (click)=\"Login()\">\r\n            \r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<!-- <form class=\"center\" action=\"\">\r\n    User name: <input type=\"text\"/> <br>\r\n    Password: <input type=\"password\"/> <br>\r\n    <input type=\"button\" value=\"Login\"/> \r\n</form> -->\r\n\r\n<!-- <div class=\"center\">\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Choose a date</mat-label>\r\n        <input matInput [matDatepicker]=\"picker\">\r\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n        <mat-datepicker #picker></mat-datepicker>\r\n    </mat-form-field>\r\n</div> -->","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\n// import { CourseListComponent } from '../course-list/course-list.component';\nimport { StudentListComponent } from '../student-list/student-list.component';\nimport { InstructorListComponent } from '../instructor-list/instructor-list.component';\nimport { LoginComponent } from 'src/SecurityApp/SecurityApp.LoginComponent';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { MyAuthGuard } from 'src/Common/Common.AuthGuard';\nimport { UserComponent } from './user/user.component';\nimport { ForbiddenComponent } from './forbidden/forbidden.component';\nimport { AdminPanelComponent } from './admin-panel/admin-panel.component';\n\n\n//sequence important\nexport const routes: Routes = [\n  { path: '', redirectTo: '/user/registration', pathMatch: 'full' },\n  { path: 'user', redirectTo: '/user/registration', pathMatch: 'full' },\n  { path: 'user', component: UserComponent, children: [{ path: 'registration', component: RegistrationComponent }, { path: 'login', component: LoginComponent }] },\n  // { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'courses', loadChildren: () => import('../course-list/course-list.module').then(m => m.CourseListModule) }, //lazy loading syntax\n  // { path: 'courses', component: CourseListComponent },\n  { path: 'students', component: StudentListComponent, canActivate: [MyAuthGuard] },\n  //{ path: 'students', component: StudentListComponent },\n  { path: 'instructors', component: InstructorListComponent },\n  // { path: 'registration', component: RegistrationComponent },\n  // { path: 'orders', loadChildren: () => import('./orders/orders.module').then(m => m.OrdersModule) },\n  { path: 'forbidden', component: ForbiddenComponent },\n  { path: 'adminpanel', component: AdminPanelComponent, canActivate: [MyAuthGuard], data: { permittedRoles: ['Administrator'] } },\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n//export const routingComponents = [CourseListComponent, StudentListComponent, InstructorListComponent, HomeComponent, LoginComponent]\nexport const routingComponents = [StudentListComponent, InstructorListComponent, HomeComponent, LoginComponent, RegistrationComponent, UserComponent]\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n  \n  <footer>\n\n  <div class=\"container-fluid p-0\">\n      <div id=\"footer-placeholder\">\n        <div class=\"row text-left\">\n          <div class=\"col-md-5\">\n              <h1 class=\"text-light\">About Us</h1>\n              <p class=\"text-muted\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo veniam laudantium asp.</p>\n              <p class=\"pt-1 text-muted\">Copyright ©\n                  <span>SGUNITED</span>\n              </p>\n          </div>\n          <div class=\"col-md-5\">\n              <h4 class=\"text-light\">Newsletter</h4>\n              <p class=\"text-muted\">Stay Updated</p>\n              <form class=\"form-inline\">\n                  <div class=\"col pl-0\">\n                      <div class=\"input-group pr-5\">\n                          <input type=\"text\" class=\"form-control bg-dark text-white\" placeholder=\"Email\">\n                          <div class=\"input-group-prepend\">\n                              <div class=\"input-group-text\">\n                                  <i class=\"fas fa-arrow-right\"></i>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </form>\n          </div>\n          <div class=\"col-md-2 col-sm-12\">\n              <h4 class=\"text-light\">Follow Us</h4>\n              <p class=\"text-muted\">Let us be social</p>\n              <div class=\"column text-light\">\n                  <i class=\"fab fa-facebook-f\"></i>\n                  <i class=\"fab fa-instagram\"></i>\n                  <i class=\"fab fa-twitter\"></i>\n                  <i class=\"fab fa-youtube\"></i>\n              </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</footer>\n  `,\n  styles: [\n    `\n    /*footer*/\n\n\nfooter {\n  background: rgba(0, 0, 0, 0.8);\n  overflow-x: hidden;\n  padding: 3vmin 18vmin;\n  padding-bottom: 10vmin;\n\n  /*position:fixed;\nbottom:0px;\nwidth:100%;*/\n}\n\nfooter p span {\n  color: #ff512f;\n}\n\nfooter input {\n  border: none !important;\n}\n\nfooter input:placeholder {\n  color: white !important;\n}\n\nfooter .input-group .input-group-text {\n  background: var(--bggradient);\n  border: none;\n}\n\nfooter .column i {\n  color: #dd2476;\n  padding: 0 0.5em;\n}\n\n/* footer .column i+i {\n  padding: 0 0.5em;\n} */\n\n    `\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from './Common.Global';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(public global: Global) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available, intercepts all http request before sent to server\r\n        request = request.clone({\r\n            setHeaders: {\r\n                //Authorization: `Bearer ${this.global.token}`\r\n                Authorization: `Bearer ${localStorage.getItem('token')}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n// import { HomeModule } from './HomeModule';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}