{"version":3,"sources":["./src/home/home.component.ts","./src/environments/environment.ts","./src/instructor-list/instructor-list.component.ts","./src/instructor-list/instructor-list.component.html","./src/CustomerApp/CustomerApp.CustomerModel.ts","./src/course-list/course-list.component.ts","./src/course-list/course-list.component.html","./src/header/header.component.ts","./src/CustomerApp/CustomerApp.CustomerModule.ts","./src/CustomerApp/CustomerApp.CreateComponent.ts","./src/CustomerApp/CustomerApp.Create.html","./src/Common/Common.Global.ts","./src/Common/Common.AuthGuard.ts","./src/student-list/student-list.component.ts","./src/student-list/student-list.component.html","./src/SecurityApp/SecurityApp.LoginModel.ts","./src/SecurityApp/SecurityApp.LoginComponent.ts","./src/SecurityApp/SecurityApp.Login.html","./src/CustomerApp/app-routing.module.ts","./src/footer/footer.component.ts","./src/Common/Common.Interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  template: `\n  <div class=\"bg\">\n    <div class=\"container text-center\">\n      <div class=\"row\">\n          <div class=\"col-md-7 col-sm-12\">\n              <h6>Contonso University</h6>\n              <h1>Welcome</h1>\n              <p>Student Management System</p>\n          </div>\n          <div class=\"col-md-5 col-sm-12\">\n              <img src=\"/CustomerClientApp/assets/cp1.jpg\" alt=\"cp1\">\n          </div>\n      </div>    \n    </div>\n  </div>\n\n  <div class=\"center\">\n  <figure>\n    <img src=\"/CustomerClientApp/assets/cp3.jpg\" alt=\"cp3\">\n    <br />\n    <figcaption>Sea otters hold hands when they\n    sleep so they don't drift away from each\n    other.</figcaption>\n  </figure>\n  </div>\n\n\n  `,\n  styles: [`\n  /*img*/\n  img {\n    border: 3px solid whitesmoke;\n    width: 120%;\n    margin-left: -10em;\n    margin-top: 3em;\n}\n\n  .row .col-md-7 {\n    padding: 22vmin 1vmin;\n    padding-bottom: 15vmin;\n    font-family: var(--Rubik);\n    color: white;\n    \n}\n\n.container .col-md-7 h6 {\n    padding: 1vmin;\n    letter-spacing: 4px;\n    background-color:black;\n    clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 70%, 70% 100%, 30% 100%, 0 100%, 0% 30%);\n}\n\n.container .col-md-7 h1 {\n    font-size: 8vmin;\n    font-weight: bold;\n    padding: 0.1em 0em;\n    background-color:black;\n    clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 70%, 70% 100%, 30% 100%, 0 100%, 0% 30%);\n}\n\n.container .col-md-7 p {\n    padding: 1vmin 5vmin;\n    background-color:black;\n    clip-path: polygon(30% 0%, 70% 0%, 100% 0, 100% 70%, 70% 100%, 30% 100%, 0 100%, 0% 30%);\n}\n.bg {\n  background: url('/CustomerClientApp/assets/cp9.jpg') no-repeat center / cover;\n\n}\n\nfigure{\n  width:50%;\n  justify-self:center;\n}\n  `\n  ]\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-instructor-list',\n  templateUrl: './instructor-list.component.html',\n  styleUrls: ['./instructor-list.component.css']\n})\nexport class InstructorListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bg\">\n    <div id=\"content\"> <!--grid wrapper-->\n\n        <!-- <div class=\"one\">1</div>\n        <div class=\"two\">2</div>\n        <div class=\"three\">3</div>\n        <div class=\"four nested\">\n            <p>1</p>\n            <p>2</p>\n            <p>3</p>\n            <p>4</p>\n        </div>\n        <div class=\"five\">5</div>\n        <div class=\"six\">6</div> -->\n\n        <main>\n            <h2>Computing</h2>\n            <h2>Philosophy</h2>\n            <h2>Skydiving</h2>\n            <h2>Training</h2>\n        </main>\n        <section>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar1.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar2.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar3.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n            <div>\n                <div style=\"background-image: url('/CustomerClientApp/assets/avatar4.jfif');\">\n                </div>\n                <p>\n                    Lorem ipsum dolor sit amet consectetur adipisicing elit. Quaerat quod illum unde officiis consectetur consequatur nihil quae sed accusantium minima corrupti amet, reprehenderit repellat. Ducimus unde quidem accusantium odio doloribus.\n                </p>\n            </div>\n        </section>\n\n    </div>\n</div>\n","import {\r\n    NgForm,\r\n    FormGroup,//step1 import these for validations, client side validations\r\n    FormControl,\r\n    Validators,\r\n    FormBuilder\r\n} from '@angular/forms'\r\n\r\n\r\nexport class Customer {\r\n    id: number = 0;\r\n    customerName: string = \"\";\r\n    address: string = \"\";\r\n\r\n    //1 to many relationship\r\n    products: Array<Product> = new Array<Product>();\r\n\r\n    //many to many relationship\r\n    courses: Array<Course> = new Array<Course>();\r\n\r\n    //step 2 create hte instnace for formgroup\r\n    formGroup: FormGroup;\r\n\r\n    constructor() {\r\n        //step 3 use builder to create empty hierachy\r\n        var _builder = new FormBuilder();\r\n        this.formGroup = _builder.group({});\r\n\r\n        //step 4 add required validation on customer name\r\n        this.formGroup.addControl(\"addressControl\", new FormControl('', Validators.required));\r\n\r\n        var validationcollection = [];\r\n        validationcollection.push(Validators.required);\r\n        validationcollection.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n\r\n        this.formGroup.addControl(\"customerNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n\r\n    }\r\n}\r\n\r\nexport class Product {\r\n    id: number = 0;\r\n    name: string = \"\";\r\n\r\n}\r\n\r\nexport class Course {\r\n    id: number = 0;\r\n    courseName: string = \"\";\r\n\r\n    //many to many relationship\r\n    customers: Array<Customer> = new Array<Customer>();\r\n\r\n    formGroup: FormGroup;\r\n\r\n    constructor() {\r\n        //step 3 use builder to create empty hierachy\r\n        var _builder = new FormBuilder();\r\n        this.formGroup = _builder.group({});\r\n\r\n        //step 4 add required validation on customer name\r\n        // this.formGroup.addControl(\"addressControl\", new FormControl('', Validators.required));\r\n\r\n        var validationcollection = [];\r\n        validationcollection.push(Validators.required);\r\n        validationcollection.push(Validators.pattern(\"^[a-zA-Z]{3,10}$\"));\r\n\r\n        this.formGroup.addControl(\"courseNameControl\", new FormControl('', Validators.compose(validationcollection)));\r\n\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Customer, Product, Course } from \"../CustomerApp/CustomerApp.CustomerModel\"\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-course-list',\n  templateUrl: './course-list.component.html',\n  styleUrls: ['./course-list.component.css']\n})\nexport class CourseListComponent implements OnInit {\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n  ngOnInit(): void {\n    this.GetCoursesfromServer();\n  }\n\n  courseObj: Course = new Course(); //binded with UI\n  courseList: Array<Course> = new Array<Course>(); //collection\n  //errorM: string = '';\n  errorList: Array<string> = new Array<string>(); //collection\n\n  GetCoursesfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.courseUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  AddtoServer() {\n\n    var coursedto: any = _.omit(this.courseObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.courseUrl, coursedto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  SearchfromServer(courseName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.courseUrl + courseName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n\n    var coursedto: any = _.omit(this.courseObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.courseUrl + coursedto.id, coursedto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.courseUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: Course) {\n    this.courseObj = new Course();\n    this.courseObj.id = selected.id;\n    this.courseObj.courseName = selected.courseName;\n\n  }\n\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    this.courseList = res; //moved on top\n    this.courseObj = new Course();\n  }\n  ErrorObserver(res: any) {\n    for (let i = 0; i < res.error.length; i++) {\n      this.errorList.push(res.error[i].errorMessage)\n    }\n  }\n}\n","\n<div class=\"bg\">\n    <br>\n  <div class=\"center\">\n      <form [formGroup]=\"courseObj.formGroup\">\n        \n        <div class=\"wrapper\">\n          <label>Id :- </label>\n          <input type=\"text\" [(ngModel)]=\"courseObj.id\" [ngModelOptions]=\"{standalone: true}\">\n      \n          <label>Name :- </label>\n          <input formControlName=\"courseNameControl\" type=\"text\" [(ngModel)]=\"courseObj.courseName\" /> \n  \n          <!-- <label>Product :- </label>\n          <input type=\"text\" [(ngModel)]=\"productObj.name\" [ngModelOptions]=\"{standalone: true}\">\n          \n          <input type=\"button\" value=\"Add products\" (click)=\"AddProduct()\" class=\"btn btn-success\"> -->\n          \n        </div>\n        \n        <!-- <ul>\n          <li *ngFor=\"let temp of courseObj.products\">\n            <td>{{temp.name}}</td>\n          </li>\n        </ul> -->\n  <br>\n        <input [disabled]=\"!(courseObj.formGroup.valid)\" (click)=\"AddtoServer()\" type=\"button\" value=\"Add Server\" class=\"btn btn-success\"/>\n        <input type=\"button\" (click)=\"GetCoursesfromServer()\" value=\"GetList\" class=\"btn btn-primary\">\n        <input type=\"button\" (click)=\"SearchfromServer(courseObj.courseName)\" value=\"SearchList\" class=\"btn btn-info\">\n        <input type=\"button\" (click)=\"EditInServer()\" value=\"EditList\" class=\"btn btn-warning\">\n        <input type=\"button\" (click)=\"DeleteInServer(courseObj.id)\" value=\"DeleteRecord\" class=\"btn btn-danger\">\n        <!--client side validations-->\n      \n    </form>\n  </div>\n\n  <br>\n\n\n<table class=\"table table-striped\">\n    <tr *ngFor=\"let temp2 of errorList\">\n      <td>{{temp2}}</td>\n    </tr>\n  </table>\n  \n  \n  \n  <table class=\"table \"> \n    <thead class=\"thead-dark \">\n      <tr>\n      <th>Id</th>\n      <th>Name</th>\n      <th>Edit</th>\n      <th>Delete</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let temp of courseList\" class=\"table-primary\">\n      <td>{{temp.id}}</td>\n      <td><img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Singapore.svg/510px-Flag_of_Singapore.svg.png'\" class=\"mr-2\" style=\"width: 20px\">\n        {{temp.courseName}}</td>\n      <!-- <td>{{temp.address}}</td> \n      <td>\n        <table>\n          <tr *ngFor=\"let temp2 of temp.products\">\n            <td>{{temp2.name}}</td>\n          </tr>\n        </table>\n      </td>-->\n      <td><input type=\"button\" (click)=\"Select(temp)\" value=\"edit\" class=\"btn btn-warning\" ></td>\n      <td><input type=\"button\" (click)=\"DeleteInServer(temp.id)\" value=\"delete\" class=\"btn btn-danger\"></td>\n    </tr>\n  </tbody>\n  </table>\n\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  template: `\n  <header>\n  <div class=\"container-fluid p-0\">\n      <div id=\"nav-placeholder\">\n        <nav class=\"navbar navbar-expand-lg\">\n          <div class=\"container-fluid\">\n            <a class=\"navbar-brand\" href=\"#\">\n                <i class=\"fas fa-book-reader fa-3x mx-3\"></i>\n                Contonso University</a>\n            <button class=\"navbar-toggler\" type=\"button\" (click)=\"toggleNavbarCollapsing()\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n              <i class=\"fas fa-align-right text-light\"></i>\n            </button>\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\" [class.collapse]=\"navbarCollapsed\">\n              <div class=\"mr-auto\"></div>\n                  <ul class=\"navbar-nav\">\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"homePage\" aria-current=\"page\" routerLink=\"/home\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{ exact: true }\">Home</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"studentsPage\" routerLink=\"/students\" routerLinkActive=\"active\">Students</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" id=\"coursesPage\" routerLink=\"/courses\" routerLinkActive=\"active\">Courses</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" routerLink=\"/instructors\" routerLinkActive=\"active\">Instructors</a>\n                      </li>\n                      <li class=\"nav-item\">\n                          <a class=\"nav-link\" routerLink=\"/login\" routerLinkActive=\"active\">Login</a>\n                      </li>\n                      <!-- <li class=\"nav-item dropdown\">\n                          <div class=\"dropdown\">\n                              <a class=\"nav-link\" href=\"#\">Departments</a>\n                              <div class=\"dropdown-content\">\n                                  <a href=\"#\">Generic</a>\n                                  <a href=\"#\">Element</a>\n                              </div>\n                          </div>\n                      </li> -->\n                  </ul> \n            </div>\n          </div>\n        </nav>\n        \n      </div>\n  </div>\n\n  <!--<div class=\"container text-center\">\n      <div class=\"row\">\n          <div class=\"col-md-7 col-sm-12\">\n              <h6>Contonso University</h6>\n              <h1>Welcome</h1>\n              <p>Student Management System</p>\n          </div>\n          <div class=\"col-md-5 col-sm-12\">\n              <img src=\"../assets/cp1.jpg\" alt=\"cp1\">\n          </div>\n      </div>    \n  </div> -->\n  \n</header>\n  `,\n  styles: [`\n  header nav a.active {\n    background-color: black;\n    clip-path: polygon(0% 0%, 75% 0%, 100% 50%, 75% 100%, 0% 100%);\n  }\n  \n  \n  * {\n    box-sizing: border-box;\n  }\n  \n  header,\n  section {\n    overflow-x: hidden;\n  }\n  \n  header a {\n    font-family: var(--Snigle-font);\n    font-size: 0.9em;\n    color: whitesmoke;\n  }\n  \n  header {\n    background: #dd2476;\n    background: linear-gradient(to bottom,\n        #dd2476,\n        #ff512f);\n    /* background: linear-gradient(45deg, red, blue); */\n  }\n  \n  header .nav-item:last-child {\n    padding-right: 10.5em;\n  }\n  \n  header .nav-item {\n    padding: 0.9em;\n  }\n  \n  header .navbar-brand {\n    padding-left: 8rem;\n  }\n  \n\n  header .nav-link:hover {\n    color: black;\n  }\n\n\n  header .row .col-md-5 {\n    padding: 4.2vmin 1vmin;\n  }\n  \n  header .row .col-md-7 {\n    padding: 22vmin 1vmin;\n    padding-bottom: 35vmin;\n    font-family: var(--Rubik);\n    color: white;\n  }\n  \n  /*header .container {\n    background: url('../asset/cp1.jpg');\n    position: relative;\n    overflow: hidden;\n    background-repeat: no-repeat;\n  }*/\n  header .container .col-md-7 h6 {\n    padding: 1vmin;\n    letter-spacing: 4px;\n  }\n  \n  header .container .col-md-7 h1 {\n    font-size: 8vmin;\n    font-weight: bold;\n    padding: 0.1em 0em;\n  }\n  \n  header .container .col-md-7 p {\n    padding: 1vmin 5vmin;\n  }\n  \n  header .container .col-md-7 button {\n    border-radius: 30px;\n    font-weight: bold;\n  }\n  \n  `\n  ]\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  navbarCollapsed = true;\n\n  toggleNavbarCollapsing() {\n    this.navbarCollapsed = !this.navbarCollapsed;\n  }\n}\n","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './CustomerApp.CreateComponent';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { HeaderComponent } from '../header/header.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { LoginComponent } from 'src/SecurityApp/SecurityApp.LoginComponent';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Global } from 'src/Common/Common.Global';\nimport { JwtInterceptor } from 'src/Common/Common.Interceptor';\nimport { MyAuthGuard } from 'src/Common/Common.AuthGuard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routingComponents,\n    HeaderComponent,\n    FooterComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, //used for [(ngmodel)]\n    HttpClientModule, //used for injections http\n    ReactiveFormsModule, //used for formgroups validations\n    NgbModule,\n    AppRoutingModule,\n    BrowserAnimationsModule, //used for routing\n    // RouterModule.forRoot(CustomerRoutes) //to apply to all \n    MatSelectModule\n  ],\n  providers: [Global, MyAuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptor, multi: true\n    }],\n  bootstrap: [AppComponent] //changing this will determine what gets loaded up first like templateComponent\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { Customer, Product } from \"./CustomerApp.CustomerModel\"\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './CustomerApp.Create.html',\n  styleUrls: ['./CustomerApp.Style.css']\n})\nexport class AppComponent {\n  date: Date = new Date();\n  /*\n  ngOnInit() {\n    //  this event is ready made and occurs first time when component is loaded\n    this.GetfromServer();\n  }\n\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n  title = 'CustomerClientApp';\n  productObj: Product = new Product(); //bind with ui\n  customerObj: Customer = new Customer(); //binded with UI\n  customerList: Array<Customer> = new Array<Customer>(); //collection\n  //errorM: string = '';\n  errorList: Array<string> = new Array<string>(); //collection\n  jsontest: any;\n\n  date: Date = new Date();\n\n  //take current product and add to customerobj products collection\n  AddProduct() {\n    this.customerObj.products.push(this.productObj);\n    this.productObj = new Product();\n  }\n\n  //add in memory\n  Add() {\n    this.customerList.push(this.customerObj); //adds the current customer obj\n    this.customerObj = new Customer(); //reset the customer obj\n    //alert(\"add is called\");\n  }\n  AddtoServer() {\n    //=====to solve circular json error======\n    //need to use dto data transfer object, basically we passing formgroup in addition to the id,name,address to mvc and mvc doesn't know what is formgroup. so we create a new dto object that copies the id,name and address only,then in the observable post, we pass this custdto instead of this.customerObj\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n    // custdto.products = this.customerObj.products; //pass the products list from customerobj to custdto to send to server\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    // var custdto:any = {\n    //   Id : this.customerObj.Id,\n    //   customerName : this.customerObj.customerName,\n    //   address : this.customerObj.address\n    // };\n\n    //we need to make call to mvc domain https://localhost:44301/\n    // var observable = this.httpObj\n    //   .post(\"https://localhost:44301/Customer/Add\", custdto); //custdto instead of this.customerObj to not include formgroup to mvc as mvc doesn't know what is formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.customerUrl, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    // for (let element of res) {\n    //   var cust: Customer = new Customer();\n    //   cust.id = element.id;\n    //   cust.address = element.address;\n    //   cust.customerName = element.customerName;\n    //   cust.products = element.products\n    //   this.customerList.push(cust);\n    // };\n\n\n    this.customerList = res; //moved on top\n    this.customerObj = new Customer();\n  }\n  ErrorObserver(res: any) {\n    for (let i = 0; i < res.error.length; i++) {\n      this.errorList.push(res.error[i].errorMessage)\n    }\n    //this.errorM = JSON.stringify(res.message);\n    // this.errorList.push(res.error[0].errorMessage);\n    // this.errorList.push(res.error[1].errorMessage);\n  }\n\n\n\n  jsonObserver(res: any) {\n    this.jsontest = res;\n  }\n\n  GetfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  getjsontest() {\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.jsonObserver(res)\n    )\n  }\n\n  SearchfromServer(customerName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl + customerName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.customerUrl + custdto.id, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.customerUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: Customer) {\n    this.customerObj = new Customer();\n    this.customerObj.id = selected.id;\n    this.customerObj.customerName = selected.customerName;\n    this.customerObj.address = selected.address;\n    this.customerObj.products = selected.products;\n  }\n*/\n}\n","<!--<p>this is an app</p>\n<form action=\"/Customer/Add\" method=\"post\">\n  Name :-<input type=\"text\" [(ngModel)]=\"customerObj.customerName\" [ngModelOptions]=\"{standalone: true}\"  /><br /> \n  Address :-<input type=\"text\" [(ngModel)]=\"customerObj.address\" [ngModelOptions]=\"{standalone: true}\" /><br /> \n  <input type=\"submit\" value=\"Add\" />\n</form>\n\n<br>\n\n<p>name</p>{{customerObj.customerName}} <br>\n<p>address</p>{{customerObj.address}}\n-->\n\n <!-- header -->\n <app-header></app-header>\n\n<body>\n\n<span class=\"center\">{{date | date:'long'}}</span>\n\n</body>\n\n <!-- routes will be rendered here -->\n <router-outlet></router-outlet>\n  \n\n<br>\n <!-- footer -->\n <app-footer></app-footer>\n\n\n","\r\n// global var injected in modules providers as service\r\nexport class Global {\r\n    customerUrl: string = \"https://localhost:44301/api/CustomerAPI/\";\r\n    securityUrl: string = \"https://localhost:44301/api/Security\";\r\n    courseUrl: string = \"https://localhost:44301/api/CourseAPI\";\r\n    // customerUrl: string = \"https://jackchangf.azurewebsites.net/api/CustomerAPI/\";\r\n    // securityUrl: string = \"https://jackchangf.azurewebsites.net/api/Security\";\r\n    // courseUrl: string = \"https://jackchangf.azurewebsites.net/api/CourseAPI\";\r\n    token: string = \"\";\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Route } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from './Common.Global';\r\n\r\n\r\n@Injectable()\r\nexport class MyAuthGuard implements CanActivate {\r\n\r\n\r\n    constructor(private _router: Router,\r\n        public _global: Global) {\r\n    }\r\n\r\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n        if (this._global.token.length != 0) {\r\n            return true;\r\n        }\r\n\r\n        // navigate to login page\r\n        this._router.navigate(['/Login']);\r\n        // you can save redirect url so after authing we can move them back to the page they requested\r\n        return false;\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Customer, Product, Course } from \"../CustomerApp/CustomerApp.CustomerModel\"\nimport { HttpClient } from \"@angular/common/http\"\nimport * as _ from \"lodash\"; //* means import all, it is old js framework\nimport { Global } from 'src/Common/Common.Global';\n\n@Component({\n  selector: 'app-student-list',\n  templateUrl: './student-list.component.html',\n  styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent implements OnInit {\n\n  ngOnInit() {\n    //  this event is ready made and occurs first time when component is loaded\n    this.GetfromServer();\n    this.GetCoursesfromServer();\n  }\n\n\n  //dependancy injection instead of using httpObj:HttpClient = new HttpClient()\n  constructor(public httpObj: HttpClient, public globalObj: Global) {\n\n  }\n\n  title = 'CustomerClientApp';\n  productObj: Product = new Product(); //bind with ui\n  customerObj: Customer = new Customer(); //binded with UI\n  customerList: Array<Customer> = new Array<Customer>(); //collection\n  courseList: Array<Course> = new Array<Course>(); //collection\n  courseObj: Course = new Course(); //binded with UI\n  //errorM: string = '';\n  errorList: Array<string> = new Array<string>(); //collection\n  jsontest: any;\n  selectedCourseId: number = 0;\n\n  date: Date = new Date();\n\n\n\n  //take current product and add to customerobj products collection\n  AddProduct() {\n    this.customerObj.products.push(this.productObj);\n    this.productObj = new Product();\n  }\n\n  AddCourse() {\n\n    for (let i = 0; i < this.courseList.length; i++) {\n      if (this.courseList[i].id == this.selectedCourseId) {\n        this.customerObj.courses.push(this.courseList[i]);\n      }\n    }\n  }\n\n  //add in memory\n  Add() {\n    this.customerList.push(this.customerObj); //adds the current customer obj\n    this.customerObj = new Customer(); //reset the customer obj\n    //alert(\"add is called\");\n  }\n  AddtoServer() {\n    //=====to solve circular json error======\n    //need to use dto data transfer object, basically we passing formgroup in addition to the id,name,address to mvc and mvc doesn't know what is formgroup. so we create a new dto object that copies the id,name and address only,then in the observable post, we pass this custdto instead of this.customerObj\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n    // custdto.products = this.customerObj.products; //pass the products list from customerobj to custdto to send to server\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    // var custdto:any = {\n    //   Id : this.customerObj.Id,\n    //   customerName : this.customerObj.customerName,\n    //   address : this.customerObj.address\n    // };\n\n    //we need to make call to mvc domain https://localhost:44301/\n    // var observable = this.httpObj\n    //   .post(\"https://localhost:44301/Customer/Add\", custdto); //custdto instead of this.customerObj to not include formgroup to mvc as mvc doesn't know what is formgroup\n\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .post(this.globalObj.customerUrl, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n  SuccessObserver(res: any) { //res is just a variable, data type any\n    // for (let element of res) {\n    //   var cust: Customer = new Customer();\n    //   cust.id = element.id;\n    //   cust.address = element.address;\n    //   cust.customerName = element.customerName;\n    //   cust.products = element.products\n    //   this.customerList.push(cust);\n    // };\n\n\n    this.customerList = res; //moved on top\n    this.customerObj = new Customer();\n  }\n  SuccessObserver1(res: any) { //res is just a variable, data type any\n    this.courseList = res; //moved on top\n    this.courseObj = new Course();\n  }\n  ErrorObserver(res: any) {\n    for (let i = 0; i < res.error.length; i++) {\n      this.errorList.push(res.error[i].errorMessage)\n    }\n    //this.errorM = JSON.stringify(res.message);\n    // this.errorList.push(res.error[0].errorMessage);\n    // this.errorList.push(res.error[1].errorMessage);\n  }\n\n\n\n  jsonObserver(res: any) {\n    this.jsontest = res;\n  }\n\n  GetfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  GetCoursesfromServer() {\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.courseUrl);\n\n    observable.subscribe(\n      res => this.SuccessObserver1(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n\n  getjsontest() {\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl);\n\n    observable.subscribe(\n      res => this.jsonObserver(res)\n    )\n  }\n\n  SearchfromServer(customerName: string) { //search by name instead of id\n    //webapi changes the url, it will figure out the add/post by itself\n    var observable = this.httpObj\n      .get(this.globalObj.customerUrl + customerName);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  EditInServer() {\n    // var custdto: any = {};\n    // custdto.address = this.customerObj.address;\n    // custdto.customerName = this.customerObj.customerName;\n    // custdto.id = this.customerObj.id;\n\n    var custdto: any = _.omit(this.customerObj, ['formGroup']); //code on top becomes this, we just want to omit formgroup\n\n    var observable = this.httpObj\n      .put(this.globalObj.customerUrl + custdto.id, custdto);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  DeleteInServer(id: number) {\n\n    var observable = this.httpObj\n      .delete(this.globalObj.customerUrl + id);\n\n    observable.subscribe(\n      res => this.SuccessObserver(res),\n      res => this.ErrorObserver(res)\n    )\n  }\n\n  //used for edit to display the customer obj response we get from server, create a new customer obj with a formgroup, then display to the angular UI\n  Select(selected: Customer) {\n    this.customerObj = new Customer();\n    this.customerObj.id = selected.id;\n    this.customerObj.customerName = selected.customerName;\n    this.customerObj.address = selected.address;\n    this.customerObj.products = selected.products;\n    this.customerObj.courses = selected.courses;\n  }\n\n}\n","\n<div class=\"bg\">\n  <br>\n<div class=\"center\">\n    <form [formGroup]=\"customerObj.formGroup\">\n      \n      <div class=\"wrapper\">\n        <label>Id :- </label>\n        <input type=\"text\" [(ngModel)]=\"customerObj.id\" [ngModelOptions]=\"{standalone: true}\">\n    \n        <label>Name :- </label>\n        <input formControlName=\"customerNameControl\" type=\"text\" [(ngModel)]=\"customerObj.customerName\" /> \n    \n        <label>Courses :- </label>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Courses</mat-label>\n          <mat-select [(value)]=\"selectedCourseId\">\n              <mat-option *ngFor=\"let temp of courseList\" [value]=\"temp.id\">\n                {{temp.courseName}}\n              </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <label>AddCourses: </label>\n        <input type=\"button\" value=\"Add course\" (click)=\"AddCourse()\" class=\"btn btn-success\">\n\n        <label>CourseAdded: </label>\n        <ul>\n          <li *ngFor=\"let temp of customerObj.courses\">\n            <table>\n              <tr>\n                <td>{{temp.id}}</td>\n                <td>{{temp.courseName}}</td>\n              </tr>\n            </table>\n          </li>\n        </ul>\n\n        <label>Address :- </label>\n        <input formControlName=\"addressControl\" type=\"text\"  [(ngModel)]=\"customerObj.address\" /> \n\n        <label>Product :- </label>\n        <input type=\"text\" [(ngModel)]=\"productObj.name\" [ngModelOptions]=\"{standalone: true}\">\n        \n        <input type=\"button\" value=\"Add products\" (click)=\"AddProduct()\" class=\"btn btn-success\">\n        \n      </div>\n      \n\n      <ul>\n        <li *ngFor=\"let temp of customerObj.products\">\n          <td>{{temp.name}}</td>\n        </li>\n      </ul>\n<br>\n      \n      <!--[ngModelOptions]=\"{standalone: true}\" this is for standalone with no validation  -->\n      <!--\n      <div>\n      id :- <input type=\"text\" [(ngModel)]=\"customerObj.id\" [ngModelOptions]=\"{standalone: true}\"><br /> \n      </div>\n      <br>\n    \n      <div>\n      Name :- <input formControlName=\"customerNameControl\" type=\"text\" [(ngModel)]=\"customerObj.customerName\" />    \n      <span class=\"errorMessage\" *ngIf=\"customerObj.formGroup.controls['customerNameControl'].dirty\" [hidden]=\"!(customerObj.formGroup.controls['customerNameControl'].hasError('required'))\"> Name is required</span>\n      <span class=\"errorMessage\" *ngIf=\"customerObj.formGroup.controls['customerNameControl'].dirty\" [hidden]=\"!(customerObj.formGroup.controls['customerNameControl'].hasError('pattern'))\"> Name should be of length 3 to 10</span>\n      </div>\n      <br>\n    \n      <div>\n      Address :- <input formControlName=\"addressControl\" type=\"text\"  [(ngModel)]=\"customerObj.address\" /> \n      <span class=\"errorMessage\" *ngIf=\"customerObj.formGroup.controls['addressControl'].dirty\" [hidden]=\"!(customerObj.formGroup.controls['addressControl'].hasError('required'))\"> Address is required</span>\n      </div>\n      <br>\n\n      <div>\n      product name: <input type=\"text\" [(ngModel)]=\"productObj.name\">\n      <input type=\"button\" value=\"Add products\" (click)=\"AddProduct()\">      \n      </div>\n      <br>\n      -->\n<br>\n      <input (click)=\"Add()\" type=\"button\" value=\"Add\" class=\"btn btn-secondary\"/>\n      <input [disabled]=\"!(customerObj.formGroup.valid)\" (click)=\"AddtoServer()\" type=\"button\" value=\"Add Server\" class=\"btn btn-success\"/>\n      <input type=\"button\" (click)=\"GetfromServer()\" value=\"GetList\" class=\"btn btn-primary\">\n      <input type=\"button\" (click)=\"SearchfromServer(customerObj.customerName)\" value=\"SearchList\" class=\"btn btn-info\">\n      <input type=\"button\" (click)=\"EditInServer()\" value=\"EditList\" class=\"btn btn-warning\">\n      <input type=\"button\" (click)=\"DeleteInServer(customerObj.id)\" value=\"DeleteRecord\" class=\"btn btn-danger\">\n      <input type=\"button\" (click)=\"getjsontest()\" value=\"GetJson\" class=\"btn btn-dark\">\n      <!--client side validations-->\n    \n  </form>\n</div>\n\n<p>You selected: {{selectedCourseId}}</p>\n\n        <!-- <ul>\n          <li *ngFor=\"let temp of courseList\">\n            <td>{{temp.courseName}}</td>\n          </li>\n        </ul> -->\n\n    <br />\n    {{customerObj.customerName}}<br>\n    {{customerObj.address}}\n   \n    <!-- {{errorM}} -->\n    \n    <table class=\"table table-striped\">\n      <tr *ngFor=\"let temp2 of errorList\">\n        <td>{{temp2}}</td>\n      </tr>\n    </table>\n    \n    \n    \n    <table class=\"table \"> \n      <thead class=\"thead-dark \">\n        <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Address</th>\n        <th>Products</th>\n        <th>Courses</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let temp of customerList\" class=\"table-primary\">\n        <td>{{temp.id}}</td>\n        <td><img [src]=\"'https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Flag_of_Singapore.svg/510px-Flag_of_Singapore.svg.png'\" class=\"mr-2\" style=\"width: 20px\">\n          {{temp.customerName}}</td>\n        <td>{{temp.address}}</td>\n        <td>\n          <table>\n            <tr *ngFor=\"let temp2 of temp.products\">\n              <td>{{temp2.name}}</td>\n            </tr>\n          </table>\n        </td>\n        <td>\n          <table>\n            <tr *ngFor=\"let temp3 of temp.courses\">\n              <td>{{temp3.courseName}}</td>\n            </tr>\n          </table>\n        </td>\n        <td><input type=\"button\" (click)=\"Select(temp)\" value=\"edit\" class=\"btn btn-warning\" ></td>\n        <td><input type=\"button\" (click)=\"DeleteInServer(temp.id)\" value=\"delete\" class=\"btn btn-danger\"></td>\n      </tr>\n    </tbody>\n    </table>\n  </div>","\r\nexport class User {\r\n    userName: string = \"\";\r\n    password: string = \"\";\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Global } from \"src/Common/Common.Global\";\r\nimport { User } from \"./SecurityApp.LoginModel\";\r\n\r\n\r\n@Component({\r\n    selector: 'security-login',\r\n    templateUrl: './SecurityApp.Login.html',\r\n    styleUrls: ['./SecurityApp.LoginStyle.css']\r\n})\r\nexport class LoginComponent {\r\n    constructor(public httpObj: HttpClient,\r\n        public globalObj: Global,\r\n        public routeObj: Router) {\r\n\r\n    }\r\n\r\n    userObj: User = new User();\r\n    Login() {\r\n        // we will make a call to mvc to get token\r\n        // alert(this.userObj.userName + \" \" + this.userObj.password);\r\n\r\n        var observable = this.httpObj.post(this.globalObj.securityUrl, this.userObj);\r\n        //var observable = this.httpObj.post(\"https://jackchangf.azurewebsites.net/api/Security\", this.userObj);\r\n\r\n        observable.subscribe(\r\n            res => this.success(res),\r\n            res => this.error(res)\r\n        );\r\n    }\r\n\r\n    success(res: any) {\r\n        this.globalObj.token = res.Value;\r\n\r\n        //nav to student screen after login token\r\n        this.routeObj.navigateByUrl('students');\r\n    }\r\n    error(res: any) {\r\n        console.log(res);\r\n    }\r\n}","<div class=\"center\">\r\n    <form action=\"\">\r\n        <h1 class=\"center\">Login</h1>\r\n        <div class=\"wrapper\">\r\n            <label>Username: </label>\r\n            <input type=\"text\" [(ngModel)]=\"userObj.userName\" name=\"userName\">\r\n\r\n            <label>Password: </label>\r\n            <input type=\"password\" [(ngModel)]=\"userObj.password\" name=\"password\"/> \r\n\r\n            <input type=\"button\" value=\"Login\" class=\"btn btn-success\" (click)=\"Login()\">\r\n            \r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<!-- <form class=\"center\" action=\"\">\r\n    User name: <input type=\"text\"/> <br>\r\n    Password: <input type=\"password\"/> <br>\r\n    <input type=\"button\" value=\"Login\"/> \r\n</form> -->\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from '../home/home.component';\nimport { CourseListComponent } from '../course-list/course-list.component';\nimport { StudentListComponent } from '../student-list/student-list.component';\nimport { InstructorListComponent } from '../instructor-list/instructor-list.component';\nimport { LoginComponent } from 'src/SecurityApp/SecurityApp.LoginComponent';\nimport { MyAuthGuard } from 'src/Common/Common.AuthGuard';\n\n//sequence important\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'courses', component: CourseListComponent },\n  // { path: 'students', component: StudentListComponent, canActivate: [MyAuthGuard] },\n  { path: 'students', component: StudentListComponent },\n  { path: 'instructors', component: InstructorListComponent },\n  { path: '**', redirectTo: '/home', pathMatch: 'full' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\nexport const routingComponents = [CourseListComponent, StudentListComponent, InstructorListComponent, HomeComponent, LoginComponent]\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  template: `\n  \n  <footer>\n\n  <div class=\"container-fluid p-0\">\n      <div id=\"footer-placeholder\">\n        <div class=\"row text-left\">\n          <div class=\"col-md-5\">\n              <h1 class=\"text-light\">About Us</h1>\n              <p class=\"text-muted\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Illo veniam laudantium asp.</p>\n              <p class=\"pt-1 text-muted\">Copyright ©\n                  <span>SGUNITED</span>\n              </p>\n          </div>\n          <div class=\"col-md-5\">\n              <h4 class=\"text-light\">Newsletter</h4>\n              <p class=\"text-muted\">Stay Updated</p>\n              <form class=\"form-inline\">\n                  <div class=\"col pl-0\">\n                      <div class=\"input-group pr-5\">\n                          <input type=\"text\" class=\"form-control bg-dark text-white\" placeholder=\"Email\">\n                          <div class=\"input-group-prepend\">\n                              <div class=\"input-group-text\">\n                                  <i class=\"fas fa-arrow-right\"></i>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </form>\n          </div>\n          <div class=\"col-md-2 col-sm-12\">\n              <h4 class=\"text-light\">Follow Us</h4>\n              <p class=\"text-muted\">Let us be social</p>\n              <div class=\"column text-light\">\n                  <i class=\"fab fa-facebook-f\"></i>\n                  <i class=\"fab fa-instagram\"></i>\n                  <i class=\"fab fa-twitter\"></i>\n                  <i class=\"fab fa-youtube\"></i>\n              </div>\n          </div>\n        </div>\n      </div>\n  </div>\n</footer>\n  `,\n  styles: [\n    `\n    /*footer*/\n\n\nfooter {\n  background: rgba(0, 0, 0, 0.8);\n  overflow-x: hidden;\n  padding: 3vmin 18vmin;\n  padding-bottom: 10vmin;\n\n  /*position:fixed;\nbottom:0px;\nwidth:100%;*/\n}\n\nfooter p span {\n  color: #ff512f;\n}\n\nfooter input {\n  border: none !important;\n}\n\nfooter input:placeholder {\n  color: white !important;\n}\n\nfooter .input-group .input-group-text {\n  background: var(--bggradient);\n  border: none;\n}\n\nfooter .column i {\n  color: #dd2476;\n  padding: 0 0.5em;\n}\n\n/* footer .column i+i {\n  padding: 0 0.5em;\n} */\n\n    `\n  ]\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from './Common.Global';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(public global: Global) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available, intercepts all http request before sent to server\r\n        request = request.clone({\r\n            setHeaders: {\r\n                Authorization: `Bearer ${this.global.token}`\r\n            }\r\n        });\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './CustomerApp/CustomerApp.CustomerModule';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}